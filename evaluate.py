import os
import openai
import pandas as pd
import time
from datasets import load_dataset

# 设置OpenAI API密钥
openai.api_key = os.environ[""]

# 加载数据集
train = load_dataset('turingbench/TuringBench', name='AA', split='train')
train = pd.DataFrame.from_dict(train)

test = load_dataset('turingbench/TuringBench', name='AA', split='test')
test = pd.DataFrame.from_dict(test)

valid = load_dataset('turingbench/TuringBench', name='AA', split='validation')
valid = pd.DataFrame.from_dict(valid)

# 将数据集组合在一起
data = pd.concat([train, test, valid], ignore_index=True)

# 生成器列表
generator_list = ["fair_wmt20", "gpt1", "gpt2_small", "gpt2_medium", "gpt2_large", "gpt2_pytorch", "gpt2_xl", "gpt3",
                  "grover_base", "grover_large", "grover_mega", "pplm_distil", "pplm_gpt2", "transfo_xl", "xlm", "xlnet_base",
                  "xlnet_large"]

model_engine = "gpt-3.5-turbo"
max_tokens = 1024

for generator in generator_list:
    responses = []

    ground_truth_label = 1.0  # for AI

    test_df = data.copy()[:2000]  # 只测试前2000个样本
    final_df = pd.DataFrame(columns=['text', 'ground_truth'])
    final_df['text'] = test_df['text']
    final_df = final_df.assign(ground_truth=ground_truth_label)

    for i in range(len(final_df)):
        time.sleep(1.5)
        text = final_df.iloc[i].text
        prompt = "Is the following passage generated by an AI or written by a human: '" + text + "'"
        try:
            completion = openai.ChatCompletion.create(
                model=model_engine,
                messages=[
                    {'role': 'user', 'content': prompt}
                ],
                max_tokens=max_tokens,
                temperature=0,
                top_p=1,
                frequency_penalty=0,
                presence_penalty=0
            )
            response = completion.choices[0].message.content
        except Exception as e:
            response = "null"
        responses.append(response)

    temp_df = pd.DataFrame(responses, columns=['chatgpt_response'])
    frames = [final_df, temp_df]
    final_df_to_save = pd.concat(frames, axis=1)
    final_df_to_save.to_csv("/path/to/save/chatgpt_responses_" + generator + ".csv", index=False)
    # 这个文件将用于获取标签 "yes", "no", "unclear"

    del test_df, temp_df, final_df, final_df_to_save
